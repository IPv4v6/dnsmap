DNSMAP README FILE

* COMMENTS *

This tool was inspired by the fictional story "The Thief No One Saw" 
by Paul Craig which can be found in the book "Stealing the Network 
- How to 0wn the Box". 

If you are interested in researching stealth computer intrusion techniques,
I suggest reading this excellent (and fun) chapter which you can find for
*free* on the web:

http://www.google.com/search?q=%22The+Thief+No+One+Saw%22+%22Paul+Craig%22
http://www.syngress.com/book_catalog/249_STL_NTW/sample.pdf
http://www.ethicalhacker.net/content/view/45/2/

I'm happy to say that this tool was included in Backtrack 2 and has been
reviewed by the community:

http://backtrack.offensive-security.com/index.php?title=Tools
http://www.linuxhaxor.net/2007/07/14/backtrack-2-information-gathering-all-dnsmap/


* COMPILING *

Compiling should be straightforward:

$ gcc dnsmap.c -o dnsmap


* INSTALLATION *

Example of manual installation:

# cp ./dnsmap /usr/bin/dnsmap


* LIMITATIONS *

This tool won't work with target domains which use wildcards. When a domain
uses wildcards, all bruteforced subdomains will resolve to the same IP address,
which makes enumerating target servers unfeasible.

dnsmap *does* however inform the user when wildcards have been detected and suggests
choosing a different target domain.


* FUN THINGS THAT CAN HAPPEN *

1. Finding interesting remote access servers (i.e.: https://extranet.targetdomain.com)

2. Finding badly configured and/or unpatched servers (i.e.: test.targetdomain.com)

3. Finding new domain names which will allow you to map non-obvious/hard-to-find netblocks
   of your target organization (registry lookups - aka whois is your friend)

4. Sometimes you find that some bruteforced subdomains resolve to internal IP addresses
   (RFC 1918). This is great as sometimes they are real up-to-date A records which means that
   it *is* possible to enumerate internal servers of a target organization from the Internet
   by only using standard DNS resolving (as oppossed to zone transfers for instance).


* USAGE *

Bruteforcing can be done either with dnsmap's built-in wordlist or a user-supplied wordlist.

Example of subdomain bruteforcing using dnsmap's built-in word-list:

$ dnsmap targetdomain.foo

Example of subdomain bruteforcing using a user-supplied wordlist:

$ dnsmap targetdomain.foo wordlist.txt

For bruteforcing a list of domains in a bulk fashion use the bash script provided. i.e.:

$ ./dnsmap-bulk.sh domains.txt
 

* WORDLISTS *

http://packetstormsecurity.org/Crackers/wordlists/dictionaries/


GNUCITIZEN | http://gnucitizen.org

- Feb. 2008
